[{"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js":"1","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js":"2","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js":"3","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js":"4","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js":"5","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":1606164290268,"results":"7","hashOfConfig":"8"},{"size":2097,"mtime":1612736694160,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606164290268,"results":"10","hashOfConfig":"8"},{"size":517,"mtime":1612751148458,"results":"11","hashOfConfig":"12"},{"size":26427,"mtime":1613061916728,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612751148479,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"12hxqeq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8mo7o0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":65,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js",[],["30","31"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js",["32"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js",[],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js",[],["33","34"],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Building extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var superpath = [];\r\n    this.state = {\r\n      path: superpath,\r\n      pathX: [0],\r\n      pathY: [0],\r\n      pathO: [[0, 0]],\r\n      pathN: [0],\r\n      stepback: 3,\r\n      mazeBuildDone: false,\r\n    };\r\n  }\r\n\r\n  renderSquare(x, y) {\r\n    var { pathX, pathY, pathO } = this.state;\r\n    function shuffle(arry) {\r\n      arry.sort(() => Math.random() - 0.5);\r\n    }\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    var z = randomNumber(1, 15);\r\n    //console.log(\"square\" + z);\r\n    var rid = \"square\" + z;\r\n    var bid = \"b1\";\r\n    var bad = \"bplus\";\r\n    //console.log({ rid });\r\n    var i = null;\r\n    for (i = 0; i < pathO.length; i++) {\r\n      if (x == pathO[i][0] && y == pathO[i][1]) {\r\n        return <button class={bad} codeX={x} codeY={y}></button>;\r\n      }\r\n    }\r\n    return <button class={bid} codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  renderGreen(x, y) {\r\n    return <button id=\"squareGreen\" codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  incrementStepback() {\r\n    this.setState((state) => {\r\n      if (state.stepback < state.pathO.length) {\r\n        return { stepback: state.stepback + 2 };\r\n      } else return { mazeBuildDone: true };\r\n    });\r\n  }\r\n\r\n  morePathFinders(g) {\r\n    var { pathO, stepback } = this.state;\r\n    console.log(\"you are here at the new recursive adventure.  \");\r\n    var exwy = pathO;\r\n\r\n    console.log(\"the Path so far is defined by : \");\r\n    console.log(pathO);\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    console.log(pathO.length + \" is the length of pathO\");\r\n    var mazeIndex = exwy.length;\r\n    var zcounter = stepback;\r\n    function pastAbsDirection(x1, x2, y1, y2) {\r\n      if (x1 == x2 && y1 > y2) {\r\n        return 1;\r\n        //up\r\n      } else if (x1 == x2 && y1 < y2) {\r\n        return 2;\r\n        //down\r\n      } else if (x1 > x2 && y1 == y2) {\r\n        return 3;\r\n        //left\r\n      } else if (x1 < x2 && y1 == y2) {\r\n        return 4;\r\n        //right\r\n      }\r\n    }\r\n\r\n    var potentialMove = [\r\n      [exwy[exwy.length - zcounter][0] + 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0] - 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] + 2],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] - 2],\r\n    ];\r\n\r\n    console.log(\"the potential moves are calculated to be:\");\r\n    console.log(potentialMove);\r\n    //these below mark whether the potential move exists in move array\r\n    var one = null;\r\n    var two = null;\r\n    var three = null;\r\n    var four = null;\r\n    //these below mark whether the potential move is on the board\r\n    var oneBoard = null;\r\n    var twoBoard = null;\r\n    var threeBoard = null;\r\n    var fourBoard = null;\r\n    var u = 0;\r\n    var i = 0;\r\n    var p = 0;\r\n    var k = 0;\r\n    for (u = 0; u < exwy.length; u++) {\r\n      if (\r\n        exwy[u][0] == potentialMove[0][0] &&\r\n        exwy[u][1] == potentialMove[0][1]\r\n      ) {\r\n        one = true;\r\n        break;\r\n      } else one = false;\r\n    }\r\n    for (i = 0; i < exwy.length; i++) {\r\n      if (\r\n        exwy[i][0] == potentialMove[1][0] &&\r\n        exwy[i][1] == potentialMove[1][1]\r\n      ) {\r\n        console.log(\"code here!\");\r\n        two = true;\r\n        break;\r\n      } else two = false;\r\n    }\r\n    for (p = 0; p < exwy.length; p++) {\r\n      if (\r\n        exwy[p][0] == potentialMove[2][0] &&\r\n        exwy[p][1] == potentialMove[2][1]\r\n      ) {\r\n        three = true;\r\n        break;\r\n      } else three = false;\r\n    }\r\n    for (k = 0; k < exwy.length; k++) {\r\n      if (\r\n        exwy[k][0] == potentialMove[3][0] &&\r\n        exwy[k][1] == potentialMove[3][1]\r\n      ) {\r\n        four = true;\r\n        break;\r\n      } else four = false;\r\n    }\r\n\r\n    var oneboard = potentialMove[0][0];\r\n    if (\r\n      0 <= potentialMove[0][0] &&\r\n      potentialMove[0][0] <= 8 &&\r\n      0 <= potentialMove[0][1] &&\r\n      potentialMove[0][1] <= 8\r\n    ) {\r\n      oneBoard = false;\r\n    } else oneBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[1][0] &&\r\n      potentialMove[1][0] <= 8 &&\r\n      0 <= potentialMove[1][1] &&\r\n      potentialMove[1][1] <= 8\r\n    ) {\r\n      twoBoard = false;\r\n    } else twoBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[2][0] &&\r\n      potentialMove[2][0] <= 8 &&\r\n      0 <= potentialMove[2][1] &&\r\n      potentialMove[2][1] <= 8\r\n    ) {\r\n      threeBoard = false;\r\n    } else threeBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[3][0] &&\r\n      potentialMove[3][0] <= 8 &&\r\n      0 <= potentialMove[3][1] &&\r\n      potentialMove[3][1] <= 8\r\n    ) {\r\n      fourBoard = false;\r\n    } else fourBoard = true;\r\n\r\n    console.log(\"board\" + oneBoard + twoBoard + threeBoard + fourBoard);\r\n\r\n    //console.log(one + two + three + four + oneboard);\r\n    //  console.log(one);\r\n    //  console.log(two);\r\n    //  console.log(three);\r\n    //  console.log(four);\r\n    console.log(\"and now presenting the value of exwy:\");\r\n    console.log(exwy);\r\n    // console.log(potentialMove[0]);\r\n    // console.log(potentialMove[1]);\r\n    // console.log(potentialMove[2]);\r\n    // console.log(potentialMove[3]);\r\n\r\n    // console.log(0 <= potentialMove[1][0]);\r\n    // console.log(exwy[1][1] == potentialMove[1][1]);\r\n\r\n    var actualPotentialMoves = [];\r\n    if (one == false && oneBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[0]);\r\n    }\r\n    if (two == false && twoBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[1]);\r\n    }\r\n    if (three == false && threeBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[2]);\r\n    }\r\n    if (four == false && fourBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[3]);\r\n    }\r\n    //array of valid potential moves (unvisited and on the board) is logged below\r\n    console.log(\"the actual Potential VALID moves are: \");\r\n    console.log(actualPotentialMoves);\r\n\r\n    if (actualPotentialMoves.length == 0) {\r\n      //this.morePathFinders();\r\n      console.log(\"end detected AGAIN\");\r\n      //this.pathMore(2);\r\n    } else if (pathO.length !== 1) {\r\n      console.log(\"i suppose the pathO length is NOT one\");\r\n      console.log(pathO.length);\r\n      var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n      console.log(\"the chooserNext chooses: \");\r\n      console.log(chooserNext);\r\n\r\n      var newDir = pastAbsDirection(\r\n        exwy[exwy.length - zcounter][0],\r\n        actualPotentialMoves[chooserNext - 1][0],\r\n        exwy[exwy.length - zcounter][1],\r\n        actualPotentialMoves[chooserNext - 1][1]\r\n      );\r\n\r\n      console.log(\"the newDir is calculated to be:\");\r\n      console.log(newDir);\r\n\r\n      if (newDir == 3) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] + 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 4) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] - 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 1) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] + 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 2) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] - 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      }\r\n      console.log(\"we actually pushed new values (exwy) i hope and they are:\");\r\n      console.log(exwy);\r\n    }\r\n    if (stepback + 4 < pathO.length) {\r\n      this.setState((state) => {\r\n        return { pathO: exwy, stepback: state.stepback + 2 };\r\n      });\r\n    } else {\r\n      console.log(\"I really think this maze is complete now\");\r\n    }\r\n    //  console.log(ex);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  pathgenerator() {\r\n    var { pathX, pathY, pathO, pathN } = this.state;\r\n\r\n    // var ex = pathX;\r\n    // var wy = pathY;\r\n    var exwy = pathO;\r\n    console.log(\"the Path so far is defined by : \");\r\n    console.log(pathO);\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    console.log(pathO.length + \" is the length of pathO\");\r\n\r\n    if (pathO.length == 1) {\r\n      var chooser = randomNumber(1, 3);\r\n      //   console.log(chooser);\r\n      if (chooser == 1) {\r\n        exwy.push([1, 0], [2, 0]);\r\n      } else if (chooser == 2) {\r\n        exwy.push([0, 1], [0, 2]);\r\n      }\r\n    } else {\r\n      console.log(\"not first turn!\");\r\n      function pastDirection(x1, x2, y1, y2) {\r\n        if (x1 == x2 && y1 > y2) {\r\n          return 1;\r\n          //up\r\n        } else if (x1 == x2 && y1 < y2) {\r\n          return 2;\r\n          //down\r\n        } else if (x1 > x2 && y1 == y2) {\r\n          return 3;\r\n          //left\r\n        } else if (x1 < x2 && y1 == y2) {\r\n          return 4;\r\n          //right\r\n        }\r\n      }\r\n      /* var directionvar = pastDirection(\r\n        pathX[pathX.length - 1],\r\n        pathX[pathX.length - 2],\r\n        pathY[pathY.length - 1],\r\n        pathY[pathY.length - 2]\r\n      );*/\r\n      //console.log(directionvar + \"direction?\");\r\n      var potentialMove = [\r\n        [exwy[exwy.length - 1][0] + 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0] - 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] + 2],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] - 2],\r\n      ];\r\n      console.log(\"the potential moves are calculated to be:\");\r\n      console.log(potentialMove);\r\n      //these below mark whether the potential move exists in move array\r\n      var one = null;\r\n      var two = null;\r\n      var three = null;\r\n      var four = null;\r\n      //these below mark whether the potential move is on the board\r\n      var oneBoard = null;\r\n      var twoBoard = null;\r\n      var threeBoard = null;\r\n      var fourBoard = null;\r\n      var u = 0;\r\n      var i = 0;\r\n      var p = 0;\r\n      var k = 0;\r\n      for (u = 0; u < exwy.length; u++) {\r\n        if (\r\n          exwy[u][0] == potentialMove[0][0] &&\r\n          exwy[u][1] == potentialMove[0][1]\r\n        ) {\r\n          one = true;\r\n          break;\r\n        } else one = false;\r\n      }\r\n      for (i = 0; i < exwy.length; i++) {\r\n        if (\r\n          exwy[i][0] == potentialMove[1][0] &&\r\n          exwy[i][1] == potentialMove[1][1]\r\n        ) {\r\n          console.log(\"code here!\");\r\n          two = true;\r\n          break;\r\n        } else two = false;\r\n      }\r\n      for (p = 0; p < exwy.length; p++) {\r\n        if (\r\n          exwy[p][0] == potentialMove[2][0] &&\r\n          exwy[p][1] == potentialMove[2][1]\r\n        ) {\r\n          three = true;\r\n          break;\r\n        } else three = false;\r\n      }\r\n      for (k = 0; k < exwy.length; k++) {\r\n        if (\r\n          exwy[k][0] == potentialMove[3][0] &&\r\n          exwy[k][1] == potentialMove[3][1]\r\n        ) {\r\n          four = true;\r\n          break;\r\n        } else four = false;\r\n      }\r\n\r\n      var oneboard = potentialMove[0][0];\r\n      if (\r\n        0 <= potentialMove[0][0] &&\r\n        potentialMove[0][0] <= 8 &&\r\n        0 <= potentialMove[0][1] &&\r\n        potentialMove[0][1] <= 8\r\n      ) {\r\n        oneBoard = false;\r\n      } else oneBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[1][0] &&\r\n        potentialMove[1][0] <= 8 &&\r\n        0 <= potentialMove[1][1] &&\r\n        potentialMove[1][1] <= 8\r\n      ) {\r\n        twoBoard = false;\r\n      } else twoBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[2][0] &&\r\n        potentialMove[2][0] <= 8 &&\r\n        0 <= potentialMove[2][1] &&\r\n        potentialMove[2][1] <= 8\r\n      ) {\r\n        threeBoard = false;\r\n      } else threeBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[3][0] &&\r\n        potentialMove[3][0] <= 8 &&\r\n        0 <= potentialMove[3][1] &&\r\n        potentialMove[3][1] <= 8\r\n      ) {\r\n        fourBoard = false;\r\n      } else fourBoard = true;\r\n\r\n      console.log(\"board\" + oneBoard + twoBoard + threeBoard + fourBoard);\r\n\r\n      //console.log(one + two + three + four + oneboard);\r\n      //  console.log(one);\r\n      //  console.log(two);\r\n      //  console.log(three);\r\n      //  console.log(four);\r\n      console.log(\"and now presenting the value of exwy:\");\r\n      console.log(exwy);\r\n      // console.log(potentialMove[0]);\r\n      // console.log(potentialMove[1]);\r\n      // console.log(potentialMove[2]);\r\n      // console.log(potentialMove[3]);\r\n\r\n      // console.log(0 <= potentialMove[1][0]);\r\n      // console.log(exwy[1][1] == potentialMove[1][1]);\r\n\r\n      var actualPotentialMoves = [];\r\n      if (one == false && oneBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[0]);\r\n      }\r\n      if (two == false && twoBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[1]);\r\n      }\r\n      if (three == false && threeBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[2]);\r\n      }\r\n      if (four == false && fourBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[3]);\r\n      }\r\n      //array of valid potential moves (unvisited and on the board) is logged below\r\n      console.log(\"the actual Potential VALID moves are: \");\r\n      console.log(actualPotentialMoves);\r\n\r\n      if (actualPotentialMoves.length == 0) {\r\n        this.morePathFinders();\r\n        console.log(\"end detected\");\r\n        //this.pathMore(exwy[exwy.length - 2])\r\n      } else if (pathO.length !== 1) {\r\n        console.log(\"i suppose the pathO length is NOT one\");\r\n        console.log(pathO.length);\r\n        var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n        console.log(\"the chooserNext chooses: \");\r\n        console.log(chooserNext);\r\n\r\n        var newDir = pastDirection(\r\n          exwy[exwy.length - 1][0],\r\n          actualPotentialMoves[chooserNext - 1][0],\r\n          exwy[exwy.length - 1][1],\r\n          actualPotentialMoves[chooserNext - 1][1]\r\n        );\r\n\r\n        console.log(\"the newDir is calculated to be:\");\r\n        console.log(newDir);\r\n\r\n        if (newDir == 3) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] + 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 4) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] - 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 1) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] + 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 2) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] - 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        }\r\n        console.log(\r\n          \"we actually pushed new values (exwy) i hope and they are:\"\r\n        );\r\n        console.log(exwy);\r\n      }\r\n\r\n      //invoke this somehow. .  .\r\n      //this.fourMoveCalculator(ex, wy);\r\n\r\n      /* var checker = 0;\r\n      var i = null;\r\n  \r\n      function pastDirection(x1, x2, y1, y2) {\r\n        if (x1 == x2 && y1 > y2) {\r\n          return 1;\r\n          //down\r\n        } else if (x1 == x2 && y1 < y2) {\r\n          return 2;\r\n          //up\r\n        } else if (x1 > x2 && y1 == y2) {\r\n          return 3;\r\n          //right\r\n        } else if (x1 < x2 && y1 == y2) {\r\n          return 4;\r\n          //left\r\n        }\r\n      }\r\n      var directionvar = pastDirection(\r\n        pathX[pathX.length - 1],\r\n        pathX[pathX.length - 2],\r\n        pathY[pathY.length - 1],\r\n        pathY[pathY.length - 2]\r\n      );\r\n      console.log(directionvar + \"direction?\");\r\n  \r\n      /* //SWITCH ATTEMPT\r\n      switch (pathX.length) {\r\n        case 1:\r\n          var chooser = randomNumber(1, 3);\r\n          if (chooser == 1) {\r\n            ex.push(1);\r\n            ex.push(2);\r\n            wy.push(0);\r\n            wy.push(0);\r\n          } else if (chooser == 2) {\r\n            ex.push(0);\r\n            ex.push(0);\r\n            wy.push(1);\r\n            wy.push(2);\r\n          }\r\n        default: \r\n          switch (pathX[pathX.length - 1]) {\r\n            case 0: \r\n              if (directionvar == 1) {\r\n                 //right\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        wy.push(wy[wy.length - 1]);\r\n                wy.push(wy[wy.length - 1]);\r\n                break;\r\n              } else if (directionvar == 4) {\r\n                 //down\r\n        ex.push(ex[ex.length - 1]);\r\n        ex.push(ex[ex.length - 1]);\r\n        wy.push(wy[wy.length - 1] + 1);\r\n                wy.push(wy[wy.length - 1] + 1);\r\n                break;\r\n              }\r\n              switch (pathY[pathY.length - 1] == 0)\r\n              case 3:\r\n  \r\n                case 2:\r\n  */\r\n\r\n      //IF ATTEMPT\r\n      /*\r\n      if (pathX.length == 1) {\r\n        var chooser = randomNumber(1, 3);\r\n        //   console.log(chooser);\r\n        if (chooser == 1) {\r\n          ex.push(1);\r\n          ex.push(2);\r\n          wy.push(0);\r\n          wy.push(0);\r\n        } else if (chooser == 2) {\r\n          ex.push(0);\r\n          ex.push(0);\r\n          wy.push(1);\r\n          wy.push(2);\r\n        } else if (chooser == 3) {\r\n          //  console.log(\"wall\");\r\n        }\r\n      } else if (pathX[pathX.length - 1] == 0 && directionvar == 1) {\r\n        console.log(\"fun\");\r\n        //right\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        wy.push(wy[wy.length - 1]);\r\n        wy.push(wy[wy.length - 1]);\r\n      } else if (pathX[pathX.length - 1] == 0 && directionvar == 4) {\r\n        console.log(\"more fun\");\r\n        //down\r\n        ex.push(ex[ex.length - 1]);\r\n        ex.push(ex[ex.length - 1]);\r\n        wy.push(wy[wy.length - 1] + 1);\r\n        wy.push(wy[wy.length - 1] + 1);\r\n      } else if (pathY[pathY.length - 1] == 0 && directionvar == 3) {\r\n        console.log(\"more fun\");\r\n        //down\r\n        ex.push(ex[ex.length - 1]);\r\n        ex.push(ex[ex.length - 1]);\r\n        wy.push(wy[wy.length - 1] + 1);\r\n        wy.push(wy[wy.length - 1] + 1);\r\n      } else if (pathY[pathY.length - 1] == 0 && directionvar == 2) {\r\n        console.log(\"fun\");\r\n        //right\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        ex.push(ex[ex.length - 1] + 1);\r\n        wy.push(wy[wy.length - 1]);\r\n        wy.push(wy[wy.length - 1]);\r\n      } else if (\r\n        pathX.length >= 3 &&\r\n        pathX[pathX.length - 1] < 8 &&\r\n        pathY[pathY.length - 1] < 8 &&\r\n        directionvar == 2 &&\r\n        pathX[pathX.length - 1] > 0 &&\r\n        pathY[pathY.length - 1] > 0\r\n        //down detection\r\n      ) {\r\n        var chooser = randomNumber(1, 4);\r\n        //  console.log(chooser);\r\n        if (chooser == 1) {\r\n          //right\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //down\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n        } else if (chooser == 3) {\r\n          console.log(\"special\");\r\n          //left\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        }\r\n      } else if (\r\n        pathX.length >= 3 &&\r\n        pathX[pathX.length - 1] < 8 &&\r\n        pathY[pathY.length - 1] < 8 &&\r\n        directionvar == 1\r\n        //up detection\r\n      ) {\r\n        var chooser = randomNumber(1, 4);\r\n        //  console.log(chooser);\r\n        if (chooser == 1) {\r\n          //right\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //up\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n        } else if (chooser == 3) {\r\n          console.log(\"special\");\r\n          //left\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        }\r\n      } else if (\r\n        pathX.length >= 3 &&\r\n        pathX[pathX.length - 1] < 8 &&\r\n        pathY[pathY.length - 1] < 8 &&\r\n        directionvar == 3\r\n        //right detection\r\n      ) {\r\n        var chooser = randomNumber(1, 4);\r\n        //    console.log(chooser);\r\n        if (chooser == 1) {\r\n          //right\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //up\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n        } else if (chooser == 3) {\r\n          console.log(\"special\");\r\n          //down\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n        }\r\n      } else if (\r\n        pathX.length >= 3 &&\r\n        pathX[pathX.length - 1] < 8 &&\r\n        pathY[pathY.length - 1] < 8 &&\r\n        directionvar == 4\r\n        //left detection\r\n      ) {\r\n        var chooser = randomNumber(1, 4);\r\n        //    console.log(chooser);\r\n        if (chooser == 1) {\r\n          //left\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          ex.push(ex[ex.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //up\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n          wy.push(wy[wy.length - 1] - 1);\r\n        } else if (chooser == 3) {\r\n          console.log(\"special\");\r\n          //down\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n        }\r\n      } else if (pathX.length == 20) {\r\n        var chooser = randomNumber(1, 3);\r\n        //    console.log(chooser);\r\n        if (chooser == 1) {\r\n          //right\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //down\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n        } else if (chooser == 3) {\r\n          //     console.log(\"wall\");\r\n        }\r\n      } else if (pathX.length == 21) {\r\n        var chooser = randomNumber(1, 3);\r\n        console.log(chooser);\r\n        if (chooser == 1) {\r\n          //right\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          ex.push(ex[ex.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1]);\r\n          wy.push(wy[wy.length - 1]);\r\n        } else if (chooser == 2) {\r\n          //down\r\n          ex.push(ex[ex.length - 1]);\r\n          ex.push(ex[ex.length - 1]);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n          wy.push(wy[wy.length - 1] + 1);\r\n        } else if (chooser == 3) {\r\n          console.log(\"wall\");\r\n        }\r\n      }\r\n      */\r\n    }\r\n\r\n    this.setState((state) => {\r\n      return { pathO: exwy };\r\n    });\r\n    //  console.log(ex);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    const elementS = [];\r\n    const elementZ = [];\r\n    const viewSize = this.props.sizeValue;\r\n\r\n    var x;\r\n    var y;\r\n    for (y = 0; y < viewSize; y++) {\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.push(<o>{this.renderSquare(x, y)}</o>);\r\n      }\r\n      elementZ.push(\r\n        <div className=\"newLine\">\r\n          {elementS.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n      );\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.pop();\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"entireThing\">\r\n        <div>\r\n          {elementZ.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n        <button onClick={() => this.pathgenerator()}>\r\n          Click to generate path\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 10,\r\n    };\r\n  }\r\n  enterCount() {\r\n    console.log(\"hello\");\r\n    var zvalue = document.getElementById(\"sizeHere\").value;\r\n    console.log(zvalue);\r\n    this.setState((state) => {\r\n      return { count: zvalue };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { count } = this.state;\r\n\r\n    const inputBox = (\r\n      <div>\r\n        <form>\r\n          <input type=\"number\" class=\"button\" id=\"sizeHere\"></input>\r\n          <button\r\n            type=\"button\"\r\n            class=\"button\"\r\n            onClick={() => this.enterCount()}\r\n          >\r\n            ENTER\r\n          </button>\r\n          10 PRINT CHR$ (205.5 + RND (1)); : GOTO 10\r\n        </form>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"HeaderSpot\">{inputBox}</div>\r\n        <Building sizeValue={count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":22,"column":19,"nodeType":"106","messageId":"107","endLine":22,"endColumn":21},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":20,"column":11,"nodeType":"112","messageId":"113","endLine":20,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":20,"column":18,"nodeType":"112","messageId":"113","endLine":20,"endColumn":23},{"ruleId":"110","severity":1,"message":"115","line":21,"column":14,"nodeType":"112","messageId":"113","endLine":21,"endColumn":21},{"ruleId":"110","severity":1,"message":"116","line":29,"column":9,"nodeType":"112","messageId":"113","endLine":29,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":35,"column":13,"nodeType":"106","messageId":"107","endLine":35,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":35,"column":33,"nodeType":"106","messageId":"107","endLine":35,"endColumn":35},{"ruleId":"110","severity":1,"message":"117","line":66,"column":9,"nodeType":"112","messageId":"113","endLine":66,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":69,"column":14,"nodeType":"106","messageId":"107","endLine":69,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":72,"column":21,"nodeType":"106","messageId":"107","endLine":72,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":75,"column":32,"nodeType":"106","messageId":"107","endLine":75,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":78,"column":32,"nodeType":"106","messageId":"107","endLine":78,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":109,"column":20,"nodeType":"106","messageId":"107","endLine":109,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":110,"column":20,"nodeType":"106","messageId":"107","endLine":110,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":118,"column":20,"nodeType":"106","messageId":"107","endLine":118,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":119,"column":20,"nodeType":"106","messageId":"107","endLine":119,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":128,"column":20,"nodeType":"106","messageId":"107","endLine":128,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":129,"column":20,"nodeType":"106","messageId":"107","endLine":129,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":137,"column":20,"nodeType":"106","messageId":"107","endLine":137,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":138,"column":20,"nodeType":"106","messageId":"107","endLine":138,"endColumn":22},{"ruleId":"110","severity":1,"message":"118","line":145,"column":9,"nodeType":"112","messageId":"113","endLine":145,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":200,"column":13,"nodeType":"106","messageId":"107","endLine":200,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":200,"column":34,"nodeType":"106","messageId":"107","endLine":200,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":203,"column":13,"nodeType":"106","messageId":"107","endLine":203,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":203,"column":34,"nodeType":"106","messageId":"107","endLine":203,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":206,"column":15,"nodeType":"106","messageId":"107","endLine":206,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":206,"column":38,"nodeType":"106","messageId":"107","endLine":206,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":209,"column":14,"nodeType":"106","messageId":"107","endLine":209,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":209,"column":36,"nodeType":"106","messageId":"107","endLine":209,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":216,"column":37,"nodeType":"106","messageId":"107","endLine":216,"endColumn":39},{"ruleId":"104","severity":1,"message":"105","line":237,"column":18,"nodeType":"106","messageId":"107","endLine":237,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":245,"column":25,"nodeType":"106","messageId":"107","endLine":245,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":253,"column":25,"nodeType":"106","messageId":"107","endLine":253,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":261,"column":25,"nodeType":"106","messageId":"107","endLine":261,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":285,"column":11,"nodeType":"112","messageId":"113","endLine":285,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":285,"column":18,"nodeType":"112","messageId":"113","endLine":285,"endColumn":23},{"ruleId":"110","severity":1,"message":"119","line":285,"column":32,"nodeType":"112","messageId":"113","endLine":285,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":298,"column":22,"nodeType":"106","messageId":"107","endLine":298,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":301,"column":19,"nodeType":"106","messageId":"107","endLine":301,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":303,"column":26,"nodeType":"106","messageId":"107","endLine":303,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":309,"column":16,"nodeType":"106","messageId":"107","endLine":309,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":312,"column":23,"nodeType":"106","messageId":"107","endLine":312,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":315,"column":34,"nodeType":"106","messageId":"107","endLine":315,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":318,"column":34,"nodeType":"106","messageId":"107","endLine":318,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":354,"column":22,"nodeType":"106","messageId":"107","endLine":354,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":355,"column":22,"nodeType":"106","messageId":"107","endLine":355,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":363,"column":22,"nodeType":"106","messageId":"107","endLine":363,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":364,"column":22,"nodeType":"106","messageId":"107","endLine":364,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":373,"column":22,"nodeType":"106","messageId":"107","endLine":373,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":374,"column":22,"nodeType":"106","messageId":"107","endLine":374,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":382,"column":22,"nodeType":"106","messageId":"107","endLine":382,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":383,"column":22,"nodeType":"106","messageId":"107","endLine":383,"endColumn":24},{"ruleId":"110","severity":1,"message":"118","line":390,"column":11,"nodeType":"112","messageId":"113","endLine":390,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":445,"column":15,"nodeType":"106","messageId":"107","endLine":445,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":445,"column":36,"nodeType":"106","messageId":"107","endLine":445,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":448,"column":15,"nodeType":"106","messageId":"107","endLine":448,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":448,"column":36,"nodeType":"106","messageId":"107","endLine":448,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":451,"column":17,"nodeType":"106","messageId":"107","endLine":451,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":451,"column":40,"nodeType":"106","messageId":"107","endLine":451,"endColumn":42},{"ruleId":"104","severity":1,"message":"105","line":454,"column":16,"nodeType":"106","messageId":"107","endLine":454,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":454,"column":38,"nodeType":"106","messageId":"107","endLine":454,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":461,"column":39,"nodeType":"106","messageId":"107","endLine":461,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":482,"column":20,"nodeType":"106","messageId":"107","endLine":482,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":490,"column":27,"nodeType":"106","messageId":"107","endLine":490,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":498,"column":27,"nodeType":"106","messageId":"107","endLine":498,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":506,"column":27,"nodeType":"106","messageId":"107","endLine":506,"endColumn":29},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["120"],["121"],"no-unused-vars","'pathX' is assigned a value but never used.","Identifier","unusedVar","'pathY' is assigned a value but never used.","'shuffle' is defined but never used.","'rid' is assigned a value but never used.","'mazeIndex' is assigned a value but never used.","'oneboard' is assigned a value but never used.","'pathN' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]