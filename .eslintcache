[{"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js":"1","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js":"2","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js":"3","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js":"4","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js":"5","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":1606164290268,"results":"7","hashOfConfig":"8"},{"size":2097,"mtime":1612736694160,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606164290268,"results":"10","hashOfConfig":"8"},{"size":517,"mtime":1612751148458,"results":"11","hashOfConfig":"12"},{"size":2436,"mtime":1612756467621,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612751148479,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"12hxqeq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8mo7o0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js",[],["30","31"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js",["32"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js",[],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js",[],["33","34"],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js",["35"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Building extends Component {\r\n  renderSquare(x, y) {\r\n    function shuffle(arry) {\r\n      arry.sort(() => Math.random() - 0.5);\r\n    }\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    var z = randomNumber(1, 15);\r\n    //console.log(\"square\" + z);\r\n    var rid = \"square\" + z;\r\n    //console.log({ rid });\r\n    return <button id={rid} codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  renderGreen(x, y) {\r\n    return <button id=\"squareGreen\" codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  render() {\r\n    const elementS = [];\r\n    const elementZ = [];\r\n    const viewSize = this.props.sizeValue;\r\n\r\n    var x;\r\n    var y;\r\n    for (y = 0; y < viewSize; y++) {\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.push(<span>{this.renderSquare(x, y)}</span>);\r\n      }\r\n      elementZ.push(\r\n        <div className=\"newLine\">\r\n          <span>\r\n            {elementS.map((value, index) => {\r\n              return <span key={index}>{value}</span>;\r\n            })}\r\n          </span>\r\n        </div>\r\n      );\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.pop();\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"entireThing\">\r\n        <div>\r\n          <span>\r\n            {elementZ.map((value, index) => {\r\n              return <span key={index}>{value}</span>;\r\n            })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 10,\r\n    };\r\n  }\r\n  enterCount() {\r\n    console.log(\"hello\");\r\n    var zvalue = document.getElementById(\"sizeHere\").value;\r\n    console.log(zvalue);\r\n    this.setState((state) => {\r\n      return { count: zvalue };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { count } = this.state;\r\n\r\n    const inputBox = (\r\n      <div>\r\n        <form>\r\n          <input type=\"number\" class=\"button\" id=\"sizeHere\"></input>\r\n          <button\r\n            type=\"button\"\r\n            class=\"button\"\r\n            onClick={() => this.enterCount()}\r\n          >\r\n            ENTER\r\n          </button>\r\n          10 PRINT CHR$ (205.5 + RND (1)); : GOTO 10\r\n        </form>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"HeaderSpot\">{inputBox}</div>\r\n        <Building sizeValue={count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":22,"column":19,"nodeType":"42","messageId":"43","endLine":22,"endColumn":21},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":6,"column":14,"nodeType":"48","messageId":"49","endLine":6,"endColumn":21},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["50"],["51"],"no-unused-vars","'shuffle' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]